
GPIO_Driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001d4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800037c  0800037c  000206c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800037c  0800037c  000206c0  2**0
                  CONTENTS
  4 .ARM          00000000  0800037c  0800037c  000206c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800037c  0800037c  000206c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800037c  0800037c  0001037c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000380  08000380  00010380  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000006c0  20000000  08000384  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  200006c0  08000a44  000206c0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200006e0  08000a44  000206e0  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000206c0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003a4f  00000000  00000000  000206ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005c8  00000000  00000000  00024139  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000210  00000000  00000000  00024708  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_macro  0000134f  00000000  00000000  00024918  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   000016d5  00000000  00000000  00025c67  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    00005cd5  00000000  00000000  0002733c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .comment      0000007b  00000000  00000000  0002d011  2**0
                  CONTENTS, READONLY
 19 .debug_ranges 000001c0  00000000  00000000  0002d090  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_frame  000007c4  00000000  00000000  0002d250  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	200006c0 	.word	0x200006c0
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000364 	.word	0x08000364

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	200006c4 	.word	0x200006c4
 80001e4:	08000364 	.word	0x08000364

080001e8 <Port_Init>:

InitStatusType gu8_PortInitStatus;


void Port_Init (const Port_ConfigType* ConfigPtr)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b084      	sub	sp, #16
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
	gu8_PortInitStatus = MODULE_UNINITIALIZED;
 80001f0:	4b1f      	ldr	r3, [pc, #124]	; (8000270 <Port_Init+0x88>)
 80001f2:	2200      	movs	r2, #0
 80001f4:	701a      	strb	r2, [r3, #0]
	uint8_t loopItr0 = 0U;
 80001f6:	2300      	movs	r3, #0
 80001f8:	73fb      	strb	r3, [r7, #15]
	volatile  GPIO_RegTypes * Reg = (GPIO_RegTypes *)GPIO_A_BASE_ADDRESS;
 80001fa:	4b1e      	ldr	r3, [pc, #120]	; (8000274 <Port_Init+0x8c>)
 80001fc:	60bb      	str	r3, [r7, #8]

	if(ConfigPtr == NULL_PTR)
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	2b00      	cmp	r3, #0
 8000202:	d103      	bne.n	800020c <Port_Init+0x24>
	{
		gu8_PortInitStatus = MODULE_INIT_FAILED;
 8000204:	4b1a      	ldr	r3, [pc, #104]	; (8000270 <Port_Init+0x88>)
 8000206:	2202      	movs	r2, #2
 8000208:	701a      	strb	r2, [r3, #0]
		return;
 800020a:	e02d      	b.n	8000268 <Port_Init+0x80>
	}

	for(loopItr0=0U; loopItr0<TOTAL_NO_OF_PINS; loopItr0++)
 800020c:	2300      	movs	r3, #0
 800020e:	73fb      	strb	r3, [r7, #15]
 8000210:	e027      	b.n	8000262 <Port_Init+0x7a>
	{
		if((ConfigPtr[loopItr0]).PinMode != PIN_UNUSED)
 8000212:	7bfa      	ldrb	r2, [r7, #15]
 8000214:	4613      	mov	r3, r2
 8000216:	005b      	lsls	r3, r3, #1
 8000218:	4413      	add	r3, r2
 800021a:	009b      	lsls	r3, r3, #2
 800021c:	461a      	mov	r2, r3
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	4413      	add	r3, r2
 8000222:	781b      	ldrb	r3, [r3, #0]
 8000224:	2bff      	cmp	r3, #255	; 0xff
 8000226:	d019      	beq.n	800025c <Port_Init+0x74>
		{
			RCC_AHB1PeripheralClkEnable((loopItr0/16U));	/** Turns on the Clock for the configured Port */
 8000228:	7bfb      	ldrb	r3, [r7, #15]
 800022a:	091b      	lsrs	r3, r3, #4
 800022c:	b2db      	uxtb	r3, r3
 800022e:	4618      	mov	r0, r3
 8000230:	f000 f822 	bl	8000278 <RCC_AHB1PeripheralClkEnable>
			//Reg->MODER.R= ((ConfigPtr[loopItr0]).PinMode)<<2U;
			REG_RMW32(&Reg->MODER.R,0x0000000C,((ConfigPtr[loopItr0]).PinMode)<<2U);
 8000234:	68bb      	ldr	r3, [r7, #8]
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	f023 010c 	bic.w	r1, r3, #12
 800023c:	7bfa      	ldrb	r2, [r7, #15]
 800023e:	4613      	mov	r3, r2
 8000240:	005b      	lsls	r3, r3, #1
 8000242:	4413      	add	r3, r2
 8000244:	009b      	lsls	r3, r3, #2
 8000246:	461a      	mov	r2, r3
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4413      	add	r3, r2
 800024c:	781b      	ldrb	r3, [r3, #0]
 800024e:	009b      	lsls	r3, r3, #2
 8000250:	f003 030c 	and.w	r3, r3, #12
 8000254:	ea41 0203 	orr.w	r2, r1, r3
 8000258:	68bb      	ldr	r3, [r7, #8]
 800025a:	601a      	str	r2, [r3, #0]
	for(loopItr0=0U; loopItr0<TOTAL_NO_OF_PINS; loopItr0++)
 800025c:	7bfb      	ldrb	r3, [r7, #15]
 800025e:	3301      	adds	r3, #1
 8000260:	73fb      	strb	r3, [r7, #15]
 8000262:	7bfb      	ldrb	r3, [r7, #15]
 8000264:	2b8f      	cmp	r3, #143	; 0x8f
 8000266:	d9d4      	bls.n	8000212 <Port_Init+0x2a>
			//ConfigPtr[loopItr0].pGPIOX->MODER.R = (ConfigPtr[loopItr0]).PinMode;
		}
	}

	/** Set the op defalult value befire settunf the pin direction */
}
 8000268:	3710      	adds	r7, #16
 800026a:	46bd      	mov	sp, r7
 800026c:	bd80      	pop	{r7, pc}
 800026e:	bf00      	nop
 8000270:	200006dc 	.word	0x200006dc
 8000274:	40020000 	.word	0x40020000

08000278 <RCC_AHB1PeripheralClkEnable>:

	}
}

void RCC_AHB1PeripheralClkEnable(Rcc_AHB1_Peripherals peripheral)
{
 8000278:	b480      	push	{r7}
 800027a:	b083      	sub	sp, #12
 800027c:	af00      	add	r7, sp, #0
 800027e:	4603      	mov	r3, r0
 8000280:	71fb      	strb	r3, [r7, #7]
	REG_RMW32(RCC_AHB1ENR,SET_BIT(peripheral) ,SET_BIT(peripheral) );
 8000282:	4b0a      	ldr	r3, [pc, #40]	; (80002ac <RCC_AHB1PeripheralClkEnable+0x34>)
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	79fb      	ldrb	r3, [r7, #7]
 8000288:	2101      	movs	r1, #1
 800028a:	fa01 f303 	lsl.w	r3, r1, r3
 800028e:	43db      	mvns	r3, r3
 8000290:	401a      	ands	r2, r3
 8000292:	79fb      	ldrb	r3, [r7, #7]
 8000294:	2101      	movs	r1, #1
 8000296:	fa01 f303 	lsl.w	r3, r1, r3
 800029a:	4904      	ldr	r1, [pc, #16]	; (80002ac <RCC_AHB1PeripheralClkEnable+0x34>)
 800029c:	4313      	orrs	r3, r2
 800029e:	600b      	str	r3, [r1, #0]
}
 80002a0:	bf00      	nop
 80002a2:	370c      	adds	r7, #12
 80002a4:	46bd      	mov	sp, r7
 80002a6:	bc80      	pop	{r7}
 80002a8:	4770      	bx	lr
 80002aa:	bf00      	nop
 80002ac:	40023830 	.word	0x40023830

080002b0 <main>:
#include "Reg_Macros.h"
#include "RCC.h"
#include "Gpio.h"

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	af00      	add	r7, sp, #0
	RCC_AHB1PeripheralClkEnable(EN_GPIOA);
 80002b4:	2000      	movs	r0, #0
 80002b6:	f7ff ffdf 	bl	8000278 <RCC_AHB1PeripheralClkEnable>
	Port_Init (&Port_Config0);
 80002ba:	4802      	ldr	r0, [pc, #8]	; (80002c4 <main+0x14>)
 80002bc:	f7ff ff94 	bl	80001e8 <Port_Init>
	if((GPIO_B.MODER.B.ModeR1)==0x1U)
	{
		RCC_AHB1PeripheralClkEnable(EN_GPIOC);
	}
#endif
	for(;;);
 80002c0:	e7fe      	b.n	80002c0 <main+0x10>
 80002c2:	bf00      	nop
 80002c4:	20000000 	.word	0x20000000

080002c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c8:	480d      	ldr	r0, [pc, #52]	; (8000300 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ca:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002cc:	480d      	ldr	r0, [pc, #52]	; (8000304 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ce:	490e      	ldr	r1, [pc, #56]	; (8000308 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d0:	4a0e      	ldr	r2, [pc, #56]	; (800030c <LoopForever+0xe>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d4:	e002      	b.n	80002dc <LoopCopyDataInit>

080002d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002da:	3304      	adds	r3, #4

080002dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e0:	d3f9      	bcc.n	80002d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e2:	4a0b      	ldr	r2, [pc, #44]	; (8000310 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e4:	4c0b      	ldr	r4, [pc, #44]	; (8000314 <LoopForever+0x16>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e8:	e001      	b.n	80002ee <LoopFillZerobss>

080002ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ec:	3204      	adds	r2, #4

080002ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f0:	d3fb      	bcc.n	80002ea <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002f2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002f6:	f000 f811 	bl	800031c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002fa:	f7ff ffd9 	bl	80002b0 <main>

080002fe <LoopForever>:

LoopForever:
    b LoopForever
 80002fe:	e7fe      	b.n	80002fe <LoopForever>
  ldr   r0, =_estack
 8000300:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000304:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000308:	200006c0 	.word	0x200006c0
  ldr r2, =_sidata
 800030c:	08000384 	.word	0x08000384
  ldr r2, =_sbss
 8000310:	200006c0 	.word	0x200006c0
  ldr r4, =_ebss
 8000314:	200006e0 	.word	0x200006e0

08000318 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000318:	e7fe      	b.n	8000318 <ADC_IRQHandler>
	...

0800031c <__libc_init_array>:
 800031c:	b570      	push	{r4, r5, r6, lr}
 800031e:	4e0d      	ldr	r6, [pc, #52]	; (8000354 <__libc_init_array+0x38>)
 8000320:	4c0d      	ldr	r4, [pc, #52]	; (8000358 <__libc_init_array+0x3c>)
 8000322:	1ba4      	subs	r4, r4, r6
 8000324:	10a4      	asrs	r4, r4, #2
 8000326:	2500      	movs	r5, #0
 8000328:	42a5      	cmp	r5, r4
 800032a:	d109      	bne.n	8000340 <__libc_init_array+0x24>
 800032c:	4e0b      	ldr	r6, [pc, #44]	; (800035c <__libc_init_array+0x40>)
 800032e:	4c0c      	ldr	r4, [pc, #48]	; (8000360 <__libc_init_array+0x44>)
 8000330:	f000 f818 	bl	8000364 <_init>
 8000334:	1ba4      	subs	r4, r4, r6
 8000336:	10a4      	asrs	r4, r4, #2
 8000338:	2500      	movs	r5, #0
 800033a:	42a5      	cmp	r5, r4
 800033c:	d105      	bne.n	800034a <__libc_init_array+0x2e>
 800033e:	bd70      	pop	{r4, r5, r6, pc}
 8000340:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000344:	4798      	blx	r3
 8000346:	3501      	adds	r5, #1
 8000348:	e7ee      	b.n	8000328 <__libc_init_array+0xc>
 800034a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800034e:	4798      	blx	r3
 8000350:	3501      	adds	r5, #1
 8000352:	e7f2      	b.n	800033a <__libc_init_array+0x1e>
 8000354:	0800037c 	.word	0x0800037c
 8000358:	0800037c 	.word	0x0800037c
 800035c:	0800037c 	.word	0x0800037c
 8000360:	08000380 	.word	0x08000380

08000364 <_init>:
 8000364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000366:	bf00      	nop
 8000368:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800036a:	bc08      	pop	{r3}
 800036c:	469e      	mov	lr, r3
 800036e:	4770      	bx	lr

08000370 <_fini>:
 8000370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000372:	bf00      	nop
 8000374:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000376:	bc08      	pop	{r3}
 8000378:	469e      	mov	lr, r3
 800037a:	4770      	bx	lr
